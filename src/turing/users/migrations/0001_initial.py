# Generated by Django 5.2.2 on 2025-06-06 19:11

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cedula', models.BigIntegerField(help_text='Cédula de identidad del usuario (única).', unique=True)),
                ('name', models.TextField()),
                ('last_name', models.TextField()),
                ('email', models.EmailField(help_text='Dirección de correo electrónico (única).', max_length=254, unique=True)),
                ('university_code', models.TextField(help_text='Código universitario (único).', unique=True)),
                ('user_group', models.TextField(db_column='group', help_text='Grupo de clase del usuario.')),
                ('role', models.CharField(choices=[('Student', 'Estudiante'), ('Teacher', 'Profesor')], default='Student', max_length=10)),
                ('state', models.CharField(choices=[('ACTIVE', 'Activo'), ('INACTIVE', 'Inactivo')], default='ACTIVE', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo. Desmarcar esto en lugar de borrar la cuenta.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesión en el sitio de administración.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='La fecha en que el usuario se unió.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'public.usuarios',
            },
        ),
    ]
